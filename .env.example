# ==================================
#    Variáveis do Backend (NestJS)
# ==================================

# URL de conexão do banco de dados para o Prisma.
# Garanta que o banco de dados 'paggo_ocr' exista ou será criado.
# Exemplo para PostgreSQL: DATABASE_URL="postgresql://seu_usuario:sua_senha@localhost:5432/paggo_ocr"
# Exemplo para SQLite (local, sem instalação): DATABASE_URL="file:./dev.db"
DATABASE_URL=

# Segredos para a geração de tokens de autenticação (JWT).
# Use um gerador de strings aleatórias bem longas para o JWT_SECRET.
JWT_SECRET=
JWT_EXPIRES_IN=7d

# Porta em que a API do NestJS irá rodar
API_PORT=3001


# ==================================
#     Variáveis de Serviços Externos
# ==================================

# Chave da API da OpenAI para as chamadas ao LLM (GPT).
# Obtenha em: https://platform.openai.com/account/api-keys
OPENAI_API_KEY=


# ==================================
#    Variáveis do Frontend (Next.js)
# ==================================

# URL base da sua API NestJS.
# O prefixo NEXT_PUBLIC_ é NECESSÁRIO para que a variável seja exposta ao navegador.
NEXT_PUBLIC_API_URL=http://localhost:3001/v1

# Segredo usado pelo NextAuth.js para assinar cookies, tokens de sessão, etc.
# Pode ser diferente do JWT_SECRET. Gere um com: `openssl rand -base64 32` no terminal.
NEXTAUTH_SECRET=

# URL completa da sua aplicação frontend.
# Obrigatória para o NextAuth.js em produção e boa prática em desenvolvimento.
NEXTAUTH_URL=http://localhost:3000